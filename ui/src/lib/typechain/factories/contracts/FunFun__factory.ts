/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FunFun, FunFunInterface } from "../../contracts/FunFun";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "raiseToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endsAt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raiseTarget_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyFun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endsAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "funToken",
    outputs: [
      {
        internalType: "contract FunToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paidAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentSupply",
        type: "uint256",
      },
    ],
    name: "priceForSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raiseTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellFun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FunToken",
        name: "token",
        type: "address",
      },
    ],
    name: "setFunToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610e4f380380610e4f833981016040819052610030916100be565b60a05160011860e0516100439190610109565b60005561004f3361006c565b6001600160a01b039093166080525060a09190915260c05261012b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600080608085870312156100d457600080fd5b84516001600160a01b03811681146100eb57600080fd5b60208601516040870151606090970151919890975090945092505050565b60008261012657634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05160e051610cd061017f600039600061016a01526000818160de01526102830152600081816101b5015281816108360152610a6c01526000818161040f015261071c0152610cd06000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063e8cbe6a91161005b578063e8cbe6a9146101d7578063f2fde38b146101ea578063f9988213146101fd57600080fd5b80638da5cb5b1461018c5780638e02b8fb1461019d578063d5abeb01146101b057600080fd5b80637ca3771a116100b25780637ca3771a14610132578063845380a21461013a578063851319761461016557600080fd5b80630a09284a146100d957806312fa769f14610113578063715018a614610128575b600080fd5b6101007f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b33600090815260036020526040902054610100565b610130610210565b005b610130610224565b60025461014d906001600160a01b031681565b6040516001600160a01b03909116815260200161010a565b6101007f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031661014d565b6101306101ab366004610b9b565b610505565b6101007f000000000000000000000000000000000000000000000000000000000000000081565b6101306101e5366004610bc9565b6108bf565b6101306101f8366004610bc9565b6108fa565b61010061020b366004610b9b565b610987565b61021861099e565b61022260006109f8565b565b6002546001600160a01b03166102815760405162461bcd60e51b815260206004820152601060248201527f46756e546f6b656e206e6f74207365740000000000000000000000000000000060448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000004210156102f15760405162461bcd60e51b815260206004820152601560248201527f43616d706169676e206e6f742066696e697368656400000000000000000000006044820152606401610278565b6002546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190610bed565b9050806000036103c95760405162461bcd60e51b815260206004820152601360248201527f4e6f2046756e546f6b656e2062616c616e6365000000000000000000000000006044820152606401610278565b33600081815260036020526040908190205490517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019290925260248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104849190610c06565b506002546040517f79cc6790000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b03909116906379cc679090604401600060405180830381600087803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b5050505050565b6002546001600160a01b031661055d5760405162461bcd60e51b815260206004820152601060248201527f46756e546f6b656e206e6f7420736574000000000000000000000000000000006044820152606401610278565b806000036105ad5760405162461bcd60e51b815260206004820152601760248201527f52657175697265206e6f6e2d7a65726f20616d6f756e740000000000000000006044820152606401610278565b6000610629600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b9190610bed565b6106ae83600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190610bed565b61020b9190610c57565b6106b89190610c70565b336000908152600360205260408120805492935083929091906106dc908490610c57565b90915550506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190610c06565b506002546040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490526001600160a01b03909116906340c10f19906044016020604051808303816000875af11580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108209190610c06565b50600254604080516318160ddd60e01b815290517f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190610bed565b036108bb576108bb610a57565b5050565b6108c761099e565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556108f7610210565b50565b61090261099e565b6001600160a01b03811661097e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610278565b6108f7816109f8565b60008054610996906002610c83565b909118919050565b6001546001600160a01b031633146102225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610278565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600254604080516318160ddd60e01b815290517f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae49190610bed565b14610b315760405162461bcd60e51b815260206004820152601560248201527f43616d706169676e206e6f742066696e697368656400000000000000000000006044820152606401610278565b600260009054906101000a90046001600160a01b03166001600160a01b031663a69df4b56040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b8157600080fd5b505af1158015610b95573d6000803e3d6000fd5b50505050565b600060208284031215610bad57600080fd5b5035919050565b6001600160a01b03811681146108f757600080fd5b600060208284031215610bdb57600080fd5b8135610be681610bb4565b9392505050565b600060208284031215610bff57600080fd5b5051919050565b600060208284031215610c1857600080fd5b81518015158114610be657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610c6a57610c6a610c28565b92915050565b81810381811115610c6a57610c6a610c28565b8082028115828204841417610c6a57610c6a610c2856fea26469706673582212206bc0167efba597431417dbbae21beeb2cfa2460b0dadc010513964c8fe77aa6064736f6c63430008170033";

type FunFunConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunFunConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunFun__factory extends ContractFactory {
  constructor(...args: FunFunConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    raiseToken_: AddressLike,
    endsAt_: BigNumberish,
    maxSupply_: BigNumberish,
    raiseTarget_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      raiseToken_,
      endsAt_,
      maxSupply_,
      raiseTarget_,
      overrides || {}
    );
  }
  override deploy(
    raiseToken_: AddressLike,
    endsAt_: BigNumberish,
    maxSupply_: BigNumberish,
    raiseTarget_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      raiseToken_,
      endsAt_,
      maxSupply_,
      raiseTarget_,
      overrides || {}
    ) as Promise<
      FunFun & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FunFun__factory {
    return super.connect(runner) as FunFun__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunFunInterface {
    return new Interface(_abi) as FunFunInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FunFun {
    return new Contract(address, _abi, runner) as unknown as FunFun;
  }
}
