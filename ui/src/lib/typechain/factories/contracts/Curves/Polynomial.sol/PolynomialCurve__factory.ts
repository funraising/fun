/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PolynomialCurve,
  PolynomialCurveInterface,
} from "../../../../contracts/Curves/Polynomial.sol/PolynomialCurve";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "steepness",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentSupply",
        type: "uint256",
      },
    ],
    name: "priceForSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161015238038061015283398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b60f48061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f998821314602d575b600080fd5b603c60383660046063565b604e565b60405190815260200160405180910390f35b60008054605b906002607b565b909118919050565b600060208284031215607457600080fd5b5035919050565b808202811582820484141760b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea2646970667358221220018305a25713bca5e2ed547d866575366d38e5a4be4ac3abe9cc41e9f72fa81c64736f6c63430008170033";

type PolynomialCurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolynomialCurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolynomialCurve__factory extends ContractFactory {
  constructor(...args: PolynomialCurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    steepness: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(steepness, overrides || {});
  }
  override deploy(
    steepness: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(steepness, overrides || {}) as Promise<
      PolynomialCurve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PolynomialCurve__factory {
    return super.connect(runner) as PolynomialCurve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolynomialCurveInterface {
    return new Interface(_abi) as PolynomialCurveInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PolynomialCurve {
    return new Contract(address, _abi, runner) as unknown as PolynomialCurve;
  }
}
